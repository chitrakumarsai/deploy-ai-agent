services: # dockers compose expects
  backend: # can be any name
    build:
      context: ./backend # directory with Dockerfile
      dockerfile: Dockerfile # Dockerfile in current directory 
    ports: # expose port
      - "8080:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - PORT=8000
    env_file:
      - .env.local # load environment variables from .env.local file
    volumes: # mount current directory to /app in container
      - ./backend/src:/app
    depends_on:
      - db_service
    develop:
      watch: # watch for changes in the backend/requirements.txt directory
        - action: rebuild
          path: ./backend/requirements.txt
        - action: rebuild
          path: ./backend/Dockerfile
        - action: sync
          path: ./backend/src
          target: /app
  db_service:
    image: postgres:17.5
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=db-password
      - POSTGRES_DB=mydb
    # env_file:
    #   - .env.sample-db
    volumes:
      - dc_managed_db_data:/var/lib/postgresql/data

  # static_html: # can be any name
  #   build:
  #     context: ./static_html # current directory
  #     dockerfile: static.Dockerfile # Dockerfile in current directory 
  #   #image: python:3.13.5-slim-bullseye
  #   ports: # expose port
  #     - "8000:8000"
  #   command: python -m http.server 8000
  #   volumes: # mount current directory to /app in container
  #     - ./static_html/src:/app

volumes:
  dc_managed_db_data: